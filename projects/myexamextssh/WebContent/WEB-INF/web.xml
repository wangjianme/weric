<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/conf/spring/**/*.xml
		</param-value>
	</context-param>
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>char</filter-name>
		<filter-class>com.myexam.pub.filter.CharFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>char</filter-name>
		<url-pattern>*.action</url-pattern><!-- 只对action的请求过虑 -->
	</filter-mapping>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>namespace</param-name>
			<param-value>blank</param-value>
		</init-param>
	</servlet>
	<servlet>
		<servlet-name>dwr</servlet-name>
		<servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
		<init-param>
			<param-name>config-1</param-name>
			<param-value>/WEB-INF/conf/dwr/dwr1.xml</param-value>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- Remove this unless you want to use active reverse ajax -->
		<init-param>
			<param-name>activeReverseAjaxEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--
			By default DWR creates application scope objects when they are first
			used. This creates them when the app-server is started
		-->
		<init-param>
			<param-name>initApplicationScopeCreatorsAtStartup</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--
			WARNING: allowing JSON-RPC connections bypasses much of the security
			protection that DWR gives you. Take this out if security is important
		-->
		<init-param>
			<param-name>jsonRpcEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--
			WARNING: allowing JSONP connections bypasses much of the security
			protection that DWR gives you. Take this out if security is important
		-->
		<init-param>
			<param-name>jsonpEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--
			data: URLs are good for small images, but are slower, and could OOM
			for larger images. Leave this out (or keep 'false') for anything but
			small images
		-->
		<init-param>
			<param-name>preferDataUrlSchema</param-name>
			<param-value>false</param-value>
		</init-param>
		<!--
			This enables full streaming mode. It's probably better to leave this
			out if you are running across the Internet
		-->
		<init-param>
			<param-name>maxWaitAfterWrite</param-name>
			<param-value>-1</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>*.go</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>dwr</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>
	<!-- 保护jsps目录下的jsp文件 -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
